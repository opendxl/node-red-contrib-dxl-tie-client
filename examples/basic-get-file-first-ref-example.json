[
    {
        "id": "a90d6ed3.c46fb",
        "type": "tab",
        "label": "TIE Get File First References Example",
        "disabled": false,
        "info": "This sample invokes the TIE DXL service to retrieve the set of systems which\r\nhave referenced a file (as identified by hashes). The response to the TIE\r\nrequest is printed to the Node-RED `debug` tab.\r\n\r\n### Prerequisites\r\n\r\n* The samples configuration step has been completed (see\r\n  [Client Configuration](https://opendxl.github.io/node-red-contrib-dxl/jsdoc/tutorial-configuration.html)).\r\n* A TIE service is available on the DXL fabric.\r\n\r\n### Setup\r\n\r\nEdit the `Specify hash request parameters` node and modify the `msg.md5`,\r\n`msg.sha1`, and `msg.sha256` rules with the hashes of the file to be looked up.\r\n\r\nThe default hashes used in the JSON-formatted document for this node\r\npertain to `notepad.exe`:\r\n\r\n```json\r\n{\r\n  \"md5\": \"f2c7bb8acc97f92e987a2d4087d021b1\",\r\n  \"sha1\": \"7eb0139d2175739b3ccb0d1110067820be6abd29\",\r\n  \"sha256\": \"142e1d688ef0568370c37187fd9f2351d7ddeda574f8bfa9b0fa4ef42db85aa2\"\r\n}\r\n```\r\n\r\nThis sample is equivalent to running the `\"Where Has File Run\"` action in the\r\n`\"TIE Reputations\"` page within ePO.\r\n\r\nA simple way to determine a valid set of hashes to use with this sample is\r\ndetailed below:\r\n\r\n* Open ePO and navigate to the `\"TIE Reputations\"` page.\r\n* Select the `\"File Search\"` tab\r\n* Select a `file` in the list\r\n* Click the `\"Actions\"` button at the bottom left and select\r\n`\"Where Has File Run\"`\r\n* The `\"Where Has File Run\"` results page is displayed. The GUIDs associated\r\n  with the systems in this list are what will be displayed when the sample is\r\n  executed.\r\n* Close the `\"Where Has File Run\"` results\r\n* Click on the same `file` to display its associated reputation information\r\n* In the `\"File Reputations Information\"` page copy the `\"MD5 Hash\"`,\r\n  `\"SHA-1 Hash\"`, and `\"SHA-256 Hash\"` values and paste them into the sample\r\n  prior to running (as shown in the example above).\r\n\r\nTo deploy the flow, press the `Deploy` button in the upper-right corner of the\r\nscreen. If Node-RED is able to properly connect to the DXL fabric, a green dot\r\nwith the word `connected` should appear under the\r\n`Get first references from TIE` node.\r\n\r\n### Running\r\n\r\nTo exercise the flow, double-click the button on the left side of the\r\n`Specify file hashes` node.\r\n\r\n### Output\r\n\r\nThe output in the Node-RED `debug` tab should appear similar to the following:\r\n\r\n```\r\n▶ [ object, object, object ]\r\n```\r\n\r\nClick on the right arrow buttons to expand the contents of the object. The\r\ncontent should look similar to the following:\r\n\r\n```\r\n▼ array[2]\r\n ▼ 0: object\r\n     date: 1475873692\r\n     agentGuid: \"{3a6f574a-3e6f-436d-acd4-bcde336b054d}\"\r\n ▼ 1: object\r\n     date: 1476316674\r\n     agentGuid: \"{d48d3d1a-915e-11e6-323a-000c2992f5d9}\"\r\n ▼ 2: object\r\n     date: 1478626172\r\n     agentGuid: \"{68125cd6-a5d8-11e6-348e-000c29663178}\"\r\n```\r\n\r\nEach entry in the array is an object containing details about a system that has\r\nreferenced the file. The following information is included in each entry:\r\n\r\n* GUID of the system that referenced the file\r\n* Time the system first referenced the file\r\n\r\n### Details\r\n\r\nThe flow exercises the nodes below.\r\n\r\n#### Start flow\r\n\r\nThis is an `inject` input node which starts the flow.\r\n\r\n#### Set hash request parameters\r\n\r\nThis is a `change` node which sets values for different hash types &mdash;\r\n`md5`, `sha1`, and `sha256` &mdash; onto an object which is stored to the\r\n`hashes` property on the message. The `Get first references from TIE` node uses\r\nthe `hashes` property when constructing the parameters for the TIE first\r\nreferences request. \r\n\r\n#### Get first references from TIE\r\n\r\nThis is a `tie get file first references` node. This node connects to the DXL\r\nfabric and sends a DXL `Request` message to the TIE service to lookup\r\nfirst references information.\r\n\r\nThe request message includes the `hashes` property set by the\r\n`Set hash request parameters` node.\r\n\r\nThe `Return` property is set to \"a parsed JSON object\" to indicate that the\r\npayload for the response should be added to the output message as a JavaScript\r\nobject decoded from JSON.\r\n\r\n#### Output first references\r\n\r\nThis is a `debug` output node. This node outputs the `payload` set on\r\nthe message by the `Get first references from TIE` node. The output should\r\ninclude information for the systems that have referenced the file."
    },
    {
        "id": "a6e154a1.519eb8",
        "type": "dxl-tie-get-file-first-references",
        "z": "a90d6ed3.c46fb",
        "name": "Get first references from TIE",
        "client": "",
        "returnType": "obj",
        "x": 340,
        "y": 200,
        "wires": [
            [
                "e6a4c444.e6f058"
            ]
        ]
    },
    {
        "id": "de35c1ba.64015",
        "type": "inject",
        "z": "a90d6ed3.c46fb",
        "name": "Start flow",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "9a1e48dc.b92ee8"
            ]
        ]
    },
    {
        "id": "e6a4c444.e6f058",
        "type": "debug",
        "z": "a90d6ed3.c46fb",
        "name": "Output first references",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "9a1e48dc.b92ee8",
        "type": "change",
        "z": "a90d6ed3.c46fb",
        "name": "Set hashes request parameter",
        "rules": [
            {
                "t": "set",
                "p": "hashes",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "hashes.md5",
                "pt": "msg",
                "to": "f2c7bb8acc97f92e987a2d4087d021b1",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hashes.sha1",
                "pt": "msg",
                "to": "7eb0139d2175739b3ccb0d1110067820be6abd29",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "hashes.sha256",
                "pt": "msg",
                "to": "142e1d688ef0568370c37187fd9f2351d7ddeda574f8bfa9b0fa4ef42db85aa2",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 120,
        "wires": [
            [
                "a6e154a1.519eb8"
            ]
        ]
    },
    {
        "id": "e77f5508.7c8508",
        "type": "comment",
        "z": "a90d6ed3.c46fb",
        "name": "Supply the file hashes in the 'Specify hash request parameter' node",
        "info": "",
        "x": 460,
        "y": 60,
        "wires": []
    }
]
